.markHoveredNodeAsHovered {
    outline-offset: .5em;
    outline: 2px solid rgba(#000, .2);
}
.markHoveredContentCollectionNodeAsHovered {
    outline-offset: .7em;
    outline: 2px solid rgba(#000, .2);
}
:global(.neos-contentcollection::before) {
    content: '';
    position: absolute;
    top: -0.10rem;
    right: 0;
    left: 0;
    bottom: -0.10rem;
}
:global(.neos-contentcollection .neos-contentcollection::before) {
    top: -0.8rem;
    bottom: -0.8rem;
}
.markHiddenNodeAsHidden {
    opacity: .5;
}

.addEmptyContentCollectionOverlay {
    height: 20px;
    width: 100%;
    outline: 2px solid var(--colors-ContrastBrighter);
}

.markActiveNodeAsFocused--focusedNode {
    outline-offset: .5em;
    outline: 2px solid var(--colors-PrimaryBlue);
}
.markActiveContentCollectionNodeAsFocused--focusedNode {
    outline-offset: .7em;
    outline: 2px solid var(--colors-PrimaryBlue);
}

:global(.neos-contentelement-shine-through:hover).markHoveredNodeAsHovered,
:global(.neos-contentelement-shine-through).markActiveNodeAsFocused--focusedNode {
    outline-color: var(--colors-Warn);
}

:global(.neos-inline-editable:focus) {
    outline: none;
}

:global([data-neos-inline-editor-is-initialized]:hover) {
    outline-offset: .3em;
    outline: 2px dashed var(--colors-PrimaryBlue);
}

.notInlineEditableOverlay {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    z-index: var(--zIndex-NotInlineEditableOverlay-Context);
    background-size: 100%;
    background-image: linear-gradient(to bottom, rgba(50, 50, 50, .1), rgba(50, 50, 50, .2), rgba(50, 50, 50, .1));
}

:global(td) {
    padding: 5px;
    border: 1px solid gray;
}
